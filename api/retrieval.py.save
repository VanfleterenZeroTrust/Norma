from typing import List, Dict, Any
from azure.core.credentials import AzureKeyCredential
from azure.search.documents import SearchClient
from azure.search.documents.models import VectorQuery
from .azure_clients import embed_query, get_search_client

TOP_K = 4  # how many passages to retrieve

def retrieve(query: str) -> List[Dict[str, Any]]:
    client: SearchClient = get_search_client()

    qvec = embed_query(query)

    # Use vector search (HNSW) â€“ field name must match your index
    vq = VectorQuery(
        vector=qvec,
        k=TOP_K,
        fields="embedding",
    )

    # Hybrid search: vector + text keyword (optional)
    results = client.search(
        search_text=query,                 # enables hybrid; set "" to use pure vector
        vector_queries=[vq],
        select=["id", "content"],         # only fetch what you need
        top=TOP_K,
    )

    out = []
    for r in results:
        out.append({
            "id": r["id"],
            "content": r["content"],
        })
    return out
